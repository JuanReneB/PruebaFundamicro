@model Asp.NETMVCCRUD.Models.Documentos

@{
    Layout = null;
}


@using (Html.BeginForm("AddOrEdit", "Documento", FormMethod.Post, new { onsubmit = "return SubmitFormDoc(this)", autocomplete = "off" }))
{
    @Html.HiddenFor(model => model.DocumentoId)
    @Html.HiddenFor(model => model.ClienteId)

    <div class="form-group">
        @Html.Label("Tipo de Documento:", new { @class = "control-label" })
        <div class="input-group">
            <span class="input-group-addon"><i class="fa fa-file-text"></i></span>
            <select class="form-control" id="TipoDocumento" name="TipoDocumento">
                <option value="OTRO">Seleccione un tipo de documento</option>
                <option value="DUI" @(Model.TipoDocumento == "DUI" ? "selected" : "")>DUI</option>
                <option value="NIT" @(Model.TipoDocumento == "NIT" ? "selected" : "")>NIT</option>
                <option value="PASAPORTE" @(Model.TipoDocumento == "PASAPORTE" ? "selected" : "")>PASAPORTE</option>
            </select>
        </div>
        @Html.ValidationMessage("TipoDocumento", "", new { @class = "text-danger" })
    </div>


    <div class="form-group">
        @Html.Label("Nuevo Número Documento:", new { @class = "control-label" }) <!-- Modificado para agregar ':' -->
        <div class="input-group">
            <span class="input-group-addon"><i class="fa fa-id-card"></i></span>
            @Html.EditorFor(model => model.NumeroDocumento, new { htmlAttributes = new { @class = "form-control", placeholder = "Ingrese su documento", type = "text" } })
        </div>
        @Html.ValidationMessageFor(model => model.NumeroDocumento)
    </div>


    <div class="modal-footer">
        <div class="text-end">
            <div class="form-group">
                <button type="submit" class="btn btn-primary"><i class="fa fa-save"></i> Guardar</button>
                <input type="reset" value="Restablecer" class="btn btn-secondary" />
            </div>

        </div>
    </div>
}
